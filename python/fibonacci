def fibtrad(num):
    fiblist = [0, 1]  # The first two fibonacci numbers
    count = 2  # Current size of the list.  The list already has two numbers so the count is 2
    if num < 0:  # Parameter can't be negative
        print("Cannot compute.")
    elif num == 0:  # If parameter is zero/a sequence with nothing in it
        print("[]")
    elif num == 1:  # A fibonacci sequence that is only one element long is 0
        print(0)
    elif num == 2:  # A fibonacci sequence that is only two elements long is 0 and 1
        print(*fiblist, sep=', ')  # Print the list (only 0 and 1 at this point)
    else:
        while count < num:  # Loop continues until list is the size that was parameter
            fiblist.append(fiblist[-1] + fiblist[-2])  # The next item in the list is the sum of the previous two
            count = count + 1  # Update variable since list just got one element bigger
        print(*fiblist, sep=', ')  # Print the list


def isitfib(num):
    fiblist = [0, 1]  # The first two fibonacci numbers
    while fiblist[-1] <= num:  # If the sequence hasn't matched or surpassed the given parameter...
        fiblist.append(fiblist[-1] + fiblist[-2])  # ...add the next number to the sequence
    if num in fiblist:  # if the sequence matched the parameter
        print(f"{num} is a Fibonacci number")
    else:  # If the sequence surpassed the parameter
        print(f"{num} is NOT a Fibonacci number")


fibtrad(13)
isitfib(89)
isitfib(60)
